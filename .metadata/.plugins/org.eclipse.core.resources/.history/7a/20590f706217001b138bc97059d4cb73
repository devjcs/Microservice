package com.jcs.categorias.controller;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.jcs.categorias.modelo.entity.Categoria;
import com.jcs.categorias.modelo.servicio.ICategoriaServicio;


@RestController
@RequestMapping("categorias")
public class ProductoController {

	@Autowired
	private ICategoriaServicio categoriaService;
	
	@Value("${server.port}")
	private Integer port;
	
	@PostMapping
	public ResponseEntity<Categoria> nuevoCategoria(@RequestBody Categoria categoria) {
		categoria.setPuerto(port);
		return ResponseEntity.status(HttpStatus.CREATED).body(categoriaService.save(categoria));
	}
	
	@GetMapping
	public ResponseEntity<List<Producto>>listaCategoria(){
		return ResponseEntity.ok(productoService.findAll().stream().map(p -> {
			p.setPuerto(port);
			return p;
		}).collect(Collectors.toList()));
	}

	@GetMapping("/{id}")
	public ResponseEntity<Producto>verCategoriaId(@PathVariable("id") Long id){
		Producto producto = productoService.findById(id);
		if (producto != null) {
			producto.setPuerto(port);
			return ResponseEntity.ok(producto);
		}
		return ResponseEntity.notFound().build();
	}
	
	@PutMapping
	public ResponseEntity<Producto>actualizarCategoriaId(@RequestBody Producto producto){
		if (productoService.findById(producto.getId()) != null) {
			producto.setPuerto(port);
			return ResponseEntity.ok(productoService.save(producto));
		}
		return ResponseEntity.notFound().build();
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<Producto>eliminarCategoriaId(@PathVariable("id") Long id){
		Producto producto = productoService.findById(id);
		if (producto != null) {
			producto.setPuerto(port);
			return ResponseEntity.ok(productoService.deleteById(id));
		}
		return ResponseEntity.notFound().build();
	}
	
	
}
